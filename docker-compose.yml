version: "3"
# Defines which compose version to use
services:
  # Services line define which Docker images to run. In this case, it will be MySQL server and WordPress image.
  db:
    image: mysql:5.7
    # image: mysql:5.7 indicates the MySQL database container image from Docker Hub used in this installation.
    command: --max_allowed_packet=32505856
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: wpdb
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: 123
      # Previous four lines define the main variables needed for the MySQL container to work: database, database username, database user password, and the MySQL root password.
    volumes: ["./data:/var/lib/mysql"]
    networks:
      - wordpress-net
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8090:80"
    environment:
      PMA_HOST: db
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: 123
      UPLOAD_LIMIT: 300M
    networks:
      - wordpress-net
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: dbuser
      WORDPRESS_DB_PASSWORD: 123
      WORDPRESS_DB_NAME: wpdb
    # Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes: ["./:/var/www/html"]
    networks:
      - wordpress-net
#volumes:
#  mysql: {}

networks:
  wordpress-net:
